{"version":3,"sources":["store/actions/auth.js","components/Navigation/Toolbar/Toolbar.module.css","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Logo/Logo.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","hoc/Aux.js","components/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","assets/images/logo.png","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/index.js","store/store.js","index.js"],"names":["auth","email","password","isSignup","dispatch","authStart","url","authData","returnSecureToken","axios","post","then","response","expirationDate","Date","getTime","data","expiresIn","localStorage","setItem","idToken","localId","authSuccess","checkAuthTimeout","catch","error","authFail","type","AUTH_START","userId","AUTH_SUCCESS","AUTH_FAIL","expirationTime","setTimeout","authLogout","removeItem","AUTH_LOGOUT","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","token","getItem","module","exports","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","SET_INGREDIENTS_FAILED","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","aux","props","children","NavigationItem","className","styles","exact","to","link","activeClassName","connect","isAuthenticated","Logo","src","BurgerLogo","alt","Toolbar","onClick","openMenu","SideDrawer","Layout","useState","sideDrawerIsOpen","setSideDrawerOpen","Aux","overlayClassName","isOpen","closeTimeoutMS","onRequestClose","onLogout","useEffect","BurgerBuilder","lazy","Checkout","MyOrders","Auth","withRouter","onAuthCheckState","routes","component","Logout","fallback","Boolean","window","location","hostname","match","initialState","ingredients","totalPrice","building","INGREDIENT_PRICE","salad","cheese","meat","bacon","burgerBuilder","state","action","updatedIngredients","ingredient","orders","loading","purchased","order","newOrder","orderData","id","orderId","concat","authRedirectPath","authReducer","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","store","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"+HAAA,oKAGaA,EAAO,SAACC,EAAOC,EAAUC,GAClC,OAAO,SAAAC,GACHA,EAASC,KAET,IAAIC,EAAM,wGACNH,IACAG,EAAM,qHAGV,IAAMC,EAAW,CACbN,QACAC,WACAM,mBAAmB,GAEvBC,IAAMC,KAAKJ,EAAKC,GACXI,MAAK,SAAAC,GACF,IAAMC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAsC,IAA1BH,EAASI,KAAKC,WACrEC,aAAaC,QAAQ,QAASP,EAASI,KAAKI,SAC5CF,aAAaC,QAAQ,SAAUP,EAASI,KAAKK,SAC7CH,aAAaC,QAAQ,iBAAkBN,GACvCT,EAASkB,EAAYV,EAASI,KAAKI,QAASR,EAASI,KAAKK,UAC1DjB,EAASmB,EAAiBX,EAASI,KAAKC,eAE3CO,OAAM,SAAAC,GACHrB,EAASsB,EAASD,EAAMb,SAASI,KAAKS,aAKzCpB,EAAY,WACrB,MAAO,CACHsB,KAAMC,MAIDN,EAAc,SAACF,EAASS,GACjC,MAAO,CACHF,KAAMG,IACNV,UACAS,WAIKH,EAAW,SAACD,GACrB,MAAO,CACHE,KAAMI,IACNN,UAIKF,EAAmB,SAACS,GAC7B,OAAO,SAAA5B,GACH6B,YAAW,WACP7B,EAAS8B,OACO,IAAjBF,KAIEE,EAAa,WAKtB,OAJAhB,aAAaiB,WAAW,SACxBjB,aAAaiB,WAAW,kBACxBjB,aAAaiB,WAAW,UAEjB,CACHR,KAAMS,MAIDC,EAAsB,SAACC,GAChC,MAAO,CACHX,KAAMY,IACND,SAIKE,EAAiB,WAC1B,OAAO,SAAApC,GACH,IAAMqC,EAAQvB,aAAawB,QAAQ,SACnC,GAAID,EAEG,CACH,IAAM5B,EAAiB,IAAIC,KAAKI,aAAawB,QAAQ,mBACrD,GAAG7B,GAAkB,IAAIC,KACrBV,EAAS8B,SACN,CACH,IAAML,EAASX,aAAawB,QAAQ,UACpCtC,EAASkB,EAAYmB,EAAOZ,IAC5BzB,EAASmB,GAAkBV,EAAeE,WAAY,IAAID,MAAOC,WAAa,YARlFX,EAAS8B,Q,mBCjFrBS,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAe,8BAA8B,mBAAmB,oC,+BCDrH,giBAAO,IAAMC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAyB,yBAEzBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAEpB3B,EAAa,aACbE,EAAe,eACfC,EAAY,YACZK,EAAc,cAEdG,EAAyB,0B,mBClBtCI,EAAOC,QAAU,CAAC,WAAW,iCAAiC,OAAS,iC,mBCAvED,EAAOC,QAAU,CAAC,iBAAiB,6BAA6B,KAAO,qB,mBCAvED,EAAOC,QAAU,CAAC,cAAc,gCAAgC,oBAAoB,sCAAsC,KAAO,yBAAyB,MAAQ,4B,gCCCnJY,IAFH,SAACC,GAAD,OAAWA,EAAMC,W,mBCC7Bf,EAAOC,QAAU,CAAC,eAAe,+B,mBCAjCD,EAAOC,QAAU,CAAC,qBAAqB,8C,mBCDvCD,EAAOC,QAAU,IAA0B,kC,2QCY5Be,EARQ,SAACF,GAAD,OACnB,wBAAIG,UAAWC,IAAO,aAClB,kBAAC,IAAD,CAASC,MAAOL,EAAMK,MAAOC,GAAIN,EAAMO,KAAMC,gBAAiBJ,IAAM,QAC9DJ,EAAMC,Y,iBCaLQ,eAJS,SAAC,GAAD,MAAa,CACjCC,gBAAgC,OADZ,EAAEnE,KACAyC,SAGXyB,EAdS,SAACT,GACrB,OACI,wBAAIG,UAAWC,IAAO,uBAClB,kBAAC,EAAD,CAAgBG,KAAK,IAAIF,OAAO,GAAhC,kBACCL,EAAMU,gBAAkB,kBAAC,EAAD,CAAgBH,KAAK,cAArB,aAA+D,KACvFP,EAAMU,gBAAkB,kBAAC,EAAD,CAAgBH,KAAK,WAArB,UAAyD,kBAAC,EAAD,CAAgBA,KAAK,UAArB,a,mDCA/EI,EANF,SAACX,GAAD,OACT,yBAAKG,UAAWC,IAAO,mBACnB,yBAAKD,UAAWC,IAAM,KAAUQ,IAAKC,IAAYC,IAAI,aCgB9CC,EAhBC,SAACf,GAAD,OACZ,4BAAQG,UAAWC,IAAM,SACrB,yBAAKD,UAAWC,IAAO,oBAAqBY,QAAShB,EAAMiB,UACvD,8BACA,8BACA,+BAEJ,yBAAKd,UAAWC,IAAO,iBACnB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,S,iBCCGc,EAbI,SAAClB,GAChB,OACI,yBAAKG,UAAWC,IAAO,gBACnB,yBAAKD,UAAWC,IAAO,sBACnB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,SC8BDe,EAlCA,SAACnB,GAAW,IAAD,EAEGoB,oBAAS,GAFZ,mBACfC,EADe,KAElBC,EAFkB,KAYtB,OACI,kBAACC,EAAA,EAAD,KACI,6BACI,kBAAC,EAAD,CAASN,SAXE,WACnBK,GAAkB,OAad,0BAAMnB,UAAWC,IAAO,iBACnBJ,EAAMC,UAGX,kBAAC,IAAD,CACIE,UAAU,cACVqB,iBAAiB,sBACjBC,OAAQJ,EACRK,eAAgB,IAChBC,eAnBY,WACpBL,GAAkB,KAmBV,kBAAC,EAAD,SCjBDb,cAAQ,MANI,SAAC9D,GACxB,MAAO,CACHiF,SAAU,kBAAMjF,EAAS8B,mBAIlBgC,EAdA,SAAC,GAAgB,IAAfmB,EAAc,EAAdA,SAKb,OAJAC,qBAAU,WACND,MACD,CAACA,IAEG,kBAAC,IAAD,CAAUtB,GAAG,SCFlBwB,EAAgBC,gBAAK,kBAAM,iCAC3BC,EAAWD,gBAAK,kBAAM,iCACtBE,EAAWF,gBAAK,kBAAM,iCACtBG,EAAOH,gBAAK,kBAAM,iCAgDTI,cAAW1B,aAJF,SAAC,GAAD,MAAa,CACjCC,gBAAgC,OADZ,EAAEnE,KACAyC,UAPC,SAACrC,GACxB,MAAO,CACHyF,iBAAkB,kBAAMzF,EAASoC,mBAQf0B,EA9Cd,SAAC,GAAyC,IAAxC2B,EAAuC,EAAvCA,iBAAkB1B,EAAqB,EAArBA,gBAC5BmB,qBAAU,WACNO,MACD,CAACA,IAEJ,IAAIC,EACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxD,KAAK,IAAIwB,OAAK,EAACiC,UAAWR,IACjC,kBAAC,IAAD,CAAOjD,KAAK,SAASyD,UAAWJ,IAChC,kBAAC,IAAD,CAAU5B,GAAG,OAgBrB,OAZGI,IACC2B,EACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxD,KAAK,IAAIwB,OAAK,EAACiC,UAAWR,IACjC,kBAAC,IAAD,CAAOjD,KAAK,YAAYyD,UAAWN,IACnC,kBAAC,IAAD,CAAOnD,KAAK,aAAayD,UAAWL,IACpC,kBAAC,IAAD,CAAOpD,KAAK,SAASyD,UAAWJ,IAChC,kBAAC,IAAD,CAAOrD,KAAK,UAAUyD,UAAWC,IACjC,kBAAC,IAAD,CAAUjC,GAAG,QAKjB,6BACI,kBAAC,EAAD,KACI,kBAAC,WAAD,CAAUkC,SAAU,4CACfH,SC/BDI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0CChBAC,EAAe,CACjBC,YAAa,KACbC,WAAY,IACZhF,OAAO,EACPiF,UAAU,GAGRC,EAAmB,CACrBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IA0DIC,EAvDO,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACpD,OAAQA,EAAOvF,MACX,KAAKkB,IAEG,IAAMsE,EAAkB,2BACjBF,EAAMT,aADW,kBAEnBU,EAAOE,WAAaH,EAAMT,YAAYU,EAAOE,YAAc,IAGhE,OAAO,2BACAH,GADP,IAEIT,YAAaW,EACbV,WAAYQ,EAAMR,WAAaE,EAAiBO,EAAOE,YACvDV,UAAU,IAGtB,KAAK5D,IAEG,IAAMqE,EAAkB,2BACjBF,EAAMT,aADW,kBAEnBU,EAAOE,WAAaH,EAAMT,YAAYU,EAAOE,YAAc,IAGhE,OAAO,2BACAH,GADP,IAEIT,YAAaW,EACbV,WAAYQ,EAAMR,WAAaE,EAAiBO,EAAOE,YACvDV,UAAU,IAItB,KAAK3D,IAEG,OAAO,2BACAkE,GADP,IAEIT,YAAaU,EAAOV,YACpBC,WAAY,IACZhF,OAAO,EACPiF,UAAU,IAItB,KAAK1D,IAEG,OAAO,2BACAiE,GADP,IAEIxF,OAAO,IAInB,QACI,OAAOwF,ICjEbV,EAAe,CACjBc,OAAQ,GACR5F,MAAO,KACP6F,SAAS,EACTC,WAAW,GAqDAC,EAlDD,WAAmC,IAAlCP,EAAiC,uDAAzBV,EAAcW,EAAW,uCAC5C,OAAOA,EAAOvF,MACV,KAAKsB,IACD,OAAO,2BACAgE,GADP,IAEIM,WAAW,IAEnB,KAAKrE,IACD,OAAO,2BACA+D,GADP,IAEIK,SAAS,IAEjB,KAAKnE,IACD,IAAMsE,EAAQ,2BACPP,EAAOQ,WADA,IAEVC,GAAIT,EAAOU,UAGf,OAAO,2BACAX,GADP,IAEIK,SAAS,EACTC,WAAW,EACXF,OAAQJ,EAAMI,OAAOQ,OAAOJ,KAEpC,KAAKrE,IACD,OAAO,2BACA6D,GADP,IAEIK,SAAS,IAEjB,KAAKjE,IACD,OAAO,2BACA4D,GADP,IAEIK,SAAS,IAEjB,KAAKhE,IACD,OAAO,2BACA2D,GADP,IAEII,OAAQH,EAAOG,OACfC,SAAS,IAEjB,KAAK/D,IACD,OAAO,2BACA0D,GADP,IAEIK,SAAS,IAEjB,QACI,OAAOL,ICrDbV,EAAe,CACjB9D,MAAO,KACPZ,OAAQ,KACRJ,MAAO,KACP6F,SAAS,EACTQ,iBAAkB,KAyCPC,EAtCK,WAAmC,IAAlCd,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAOA,EAAOvF,MACV,KAAKC,IACD,OAAO,2BACAqF,GADP,IAEIxF,MAAO,KACP6F,SAAS,IAEjB,KAAKxF,IACD,OAAO,2BACAmF,GADP,IAEIxE,MAAOyE,EAAO9F,QACdS,OAAQqF,EAAOrF,OACfJ,MAAO,KACP6F,SAAS,IAEjB,KAAKvF,IACD,OAAO,2BACAkF,GADP,IAEIxF,MAAOyF,EAAOzF,MACd6F,SAAS,IAEjB,KAAKlF,IACD,OAAO,2BACA6E,GADP,IAEIxE,MAAO,KACPZ,OAAQ,OAEhB,KAAKU,IACD,OAAO,2BACA0E,GADP,IAEIa,iBAAkBZ,EAAO5E,OAEjC,QACI,OAAO2E,ICrCJe,EAFKC,YAAgB,CAACjB,cAAekB,EAAsBV,MAAOW,EAAcnI,KAAM+H,ICA/FK,GAAmBjC,OAAOkC,sCAAwCC,IACzDC,eAAYP,EAAaI,GAAiBI,YAAgBC,OCIzEC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,IACjB,kBAAC,IAAD,KACI,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,SAGCC,SAASC,eAAe,SNkH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEd5H,OAAM,SAAAC,GACL4H,QAAQ5H,MAAMA,EAAM6H,c","file":"static/js/main.44380c75.chunk.js","sourcesContent":["import { AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT, SET_AUTH_REDIRECT_PATH } from './actionTypes';\nimport axios from 'axios';\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAM2M9kplv8fAM_ha4ovg6nEi1sggBmql4';\n        if(!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAM2M9kplv8fAM_ha4ovg6nEi1sggBmql4'\n        }\n\n        const authData = {\n            email,\n            password,\n            returnSecureToken: true\n        }\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('userId', response.data.localId);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            }) \n            .catch(error => {\n                dispatch(authFail(error.response.data.error));\n            })\n    };\n};\n\nexport const authStart = () => {\n    return {\n        type: AUTH_START\n    }\n};\n\nexport const authSuccess = (idToken, userId) => {\n    return {\n        type: AUTH_SUCCESS,\n        idToken,\n        userId\n    }\n};\n\nexport const authFail = (error) => {\n    return {\n        type: AUTH_FAIL,\n        error\n    }\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000);\n    }\n};\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n\n    return {\n        type: AUTH_LOGOUT\n    }\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: SET_AUTH_REDIRECT_PATH,\n        path\n    }\n};\n\nexport const authCheckState = () => {\n    return dispatch => { \n        const token = localStorage.getItem('token');\n        if(!token) {\n            dispatch(authLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()) {\n                dispatch(authLogout()); \n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__32e_3\",\"toolbar-logo\":\"Toolbar_toolbar-logo__3Zbhl\",\"toolbar-menu-btn\":\"Toolbar_toolbar-menu-btn__2bI1T\"};","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const SET_INGREDIENTS_FAILED = \"SET_INGREDIENTS_FAILED\";\n\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\"; \nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"; \nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\"; \n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-item\":\"NavigationItem_nav-item__17ahl\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-container\":\"Logo_logo-container__le2kA\",\"logo\":\"Logo_logo__1Ev9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side-drawer\":\"SideDrawer_side-drawer__1OHr3\",\"side-drawer__logo\":\"SideDrawer_side-drawer__logo__3FyJ8\",\"open\":\"SideDrawer_open__3cfi1\",\"close\":\"SideDrawer_close__GN0OD\"};","const aux = (props) => props.children;\n\nexport default aux;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"Layout_main-content__300Iy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-item-container\":\"NavigationItems_nav-item-container__bQTLH\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport styles from './NavigationItem.module.css';\n\nconst NavigationItem = (props) => (\n    <li className={styles['nav-item']}>\n        <NavLink exact={props.exact} to={props.link} activeClassName={styles['active']}>\n            { props.children } \n        </NavLink>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport styles from './NavigationItems.module.css';\n\nconst NavigationItems = (props) => {\n    return (\n        <ul className={styles['nav-item-container']}>\n            <NavigationItem link=\"/\" exact={true}>Burger Builder</NavigationItem>\n            {props.isAuthenticated ? <NavigationItem link=\"/my-orders\">My Orders</NavigationItem> : null}\n            {props.isAuthenticated ? <NavigationItem link=\"/logout\">Logout</NavigationItem> : <NavigationItem link=\"/login\">Login</NavigationItem>}\n        </ul>\n    )\n}\n\nconst mapStateToProps = ({auth}) => ({ \n    isAuthenticated: auth.token !== null\n})\n\nexport default connect(mapStateToProps)(NavigationItems);","import React from 'react';\n\nimport styles from './Logo.module.css';\nimport BurgerLogo from '../../assets/images/logo.png'\n\nconst Logo = (props) => (\n    <div className={styles['logo-container']} >\n        <img className={styles['logo']} src={BurgerLogo} alt=\"Laguna\"/>\n    </div>\n);\n\nexport default Logo;","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport styles from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\n\nconst Toolbar = (props) => (\n    <header className={styles['toolbar']}>\n        <div className={styles['toolbar-menu-btn']} onClick={props.openMenu}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n        <div className={styles['toolbar-logo']}>\n            <Logo/>\n        </div>\n        <nav> \n            <NavigationItems/>\n        </nav>\n    </header>\n)\n\nexport default Toolbar;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport styles from './SideDrawer.module.css';\n\nconst SideDrawer = (props) => {\n    return (\n        <div className={styles['side-drawer']}>\n            <div className={styles['side-drawer__logo']}>\n                <Logo/>\n            </div>\n            <nav>\n                <NavigationItems></NavigationItems>\n            </nav>\n        </div>\n    )\n}\n\nexport default SideDrawer;","import React, {useState} from 'react';\nimport Aux from '../../hoc/Aux';\nimport Modal from 'react-modal';\nimport styles from './Layout.module.css';\nimport '../../assets/css/SideDrawer.css';\n\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nconst Layout = (props) => {\n    const [sideDrawerIsOpen,\n        setSideDrawerOpen] = useState(false);\n\n    const openSideDrawer = () => {\n        setSideDrawerOpen(true);\n    }\n\n    const closeSideDrawer = () => {\n        setSideDrawerOpen(false);\n    }\n\n    return (\n        <Aux>\n            <div>\n                <Toolbar openMenu={openSideDrawer}></Toolbar>\n            </div>\n\n            <main className={styles['main-content']}>\n                {props.children}\n            </main>\n\n            <Modal\n                className=\"side-drawer\"\n                overlayClassName=\"side-drawer-overlay\"\n                isOpen={sideDrawerIsOpen}\n                closeTimeoutMS={100}\n                onRequestClose={closeSideDrawer}>\n                <SideDrawer></SideDrawer>\n            </Modal>\n        </Aux>\n    )\n}\n\nexport default Layout;","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport {authLogout} from '../../../store/actions/auth';\n\nconst Logout = ({onLogout}) => {\n    useEffect(() => {\n        onLogout();\n    }, [onLogout])\n\n    return <Redirect to=\"/\" />\n}; \n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogout: () => dispatch(authLogout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {useEffect, lazy, Suspense} from 'react';\nimport {Switch, Route, withRouter, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {authCheckState} from './store/actions/auth';\n\nimport Layout from './components/Layout/Layout';\nimport Logout from './containers/Auth/Logout/Logout';\n\nconst BurgerBuilder = lazy(() => import('./containers/BurgerBuilder/BurgerBuilder'));\nconst Checkout = lazy(() => import('./containers/Checkout/Checkout'));\nconst MyOrders = lazy(() => import('./containers/MyOrders/MyOrders'));\nconst Auth = lazy(() => import('./containers/Auth/Auth'));\n\nconst App = ({onAuthCheckState, isAuthenticated}) => {\n    useEffect(() => { \n        onAuthCheckState()\n    }, [onAuthCheckState]);\n\n    let routes = (\n        <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder}/>\n            <Route path=\"/login\" component={Auth}/>\n            <Redirect to=\"/\"/>\n        </Switch>\n    )\n\n    if(isAuthenticated) {\n        routes = (\n        <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder}/>\n            <Route path=\"/checkout\" component={Checkout}/>\n            <Route path=\"/my-orders\" component={MyOrders}/>\n            <Route path=\"/login\" component={Auth}/> \n            <Route path=\"/logout\" component={Logout}/>\n            <Redirect to=\"/\"/>\n        </Switch>)\n    }\n\n    return (\n        <div>\n            <Layout>\n                <Suspense fallback={<div>Loading...</div>}>\n                    {routes}\n                </Suspense>\n            </Layout>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuthCheckState: () => dispatch(authCheckState())\n    }\n};\n\nconst mapStateToProps = ({auth}) => ({\n    isAuthenticated: auth.token !== null\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ADD_INGREDIENT, REMOVE_INGREDIENT, SET_INGREDIENTS, SET_INGREDIENTS_FAILED} from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 400,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICE = {\n    salad: 50,\n    cheese: 40,\n    meat: 130,\n    bacon: 70\n}\n\nconst burgerBuilder = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_INGREDIENT:\n            {\n                const updatedIngredients = {\n                    ...state.ingredients,\n                    [action.ingredient]: state.ingredients[action.ingredient] + 1\n                };\n\n                return {\n                    ...state,\n                    ingredients: updatedIngredients,\n                    totalPrice: state.totalPrice + INGREDIENT_PRICE[action.ingredient],\n                    building: true\n                }\n            }\n        case REMOVE_INGREDIENT:\n            {\n                const updatedIngredients = {\n                    ...state.ingredients,\n                    [action.ingredient]: state.ingredients[action.ingredient] - 1\n                }\n\n                return {\n                    ...state,\n                    ingredients: updatedIngredients,\n                    totalPrice: state.totalPrice - INGREDIENT_PRICE[action.ingredient],\n                    building: true\n                }\n            }\n\n        case SET_INGREDIENTS:\n            {\n                return {\n                    ...state,\n                    ingredients: action.ingredients,\n                    totalPrice: 400,\n                    error: false,\n                    building: false\n                }\n            }\n\n        case SET_INGREDIENTS_FAILED:\n            {\n                return {\n                    ...state,\n                    error: true\n                }\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default burgerBuilder;","import {PURCHASE_BURGER_SUCCESS, PURCHASE_BURGER_FAIL, PURCHASE_BURGER_START, PURCHASE_INIT, FETCH_ORDERS_START, FETCH_ORDERS_SUCCESS, FETCH_ORDERS_FAIL} from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    error: null,\n    loading: false,\n    purchased: false\n}\n\nconst order = (state = initialState, action) => {\n    switch(action.type) {\n        case PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            };\n        case PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case PURCHASE_BURGER_SUCCESS: \n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n            }\n\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder) \n            };\n        case PURCHASE_BURGER_FAIL: \n            return {\n                ...state,\n                loading: false\n            };\n        case FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            }\n        case FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false \n            }\n        default: \n            return state\n    }\n}\n\nexport default order;","import {AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT, SET_AUTH_REDIRECT_PATH} from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/' \n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case AUTH_START:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            }\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.idToken,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n        case AUTH_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n        case AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            }\n        case SET_AUTH_REDIRECT_PATH:\n            return {\n                ...state,\n                authRedirectPath: action.path\n            }\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport burgerBuilderReducer from './burgerBuilder';\nimport orderReducer from './order';\nimport authReducer from './auth';\n\nconst rootReducer = combineReducers({burgerBuilder: burgerBuilderReducer, order: orderReducer, auth: authReducer});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <Router>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Router>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}